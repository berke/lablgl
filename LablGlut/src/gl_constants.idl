quote(mli, "val gl_version_1_1 : int")
quote(mli, "val gl_version_1_2 : int")
quote(mli, "val gl_false : int")
quote(mli, "val gl_true : int")
quote(mli, "val gl_byte : int")
quote(mli, "val gl_unsigned_byte : int")
quote(mli, "val gl_short : int")
quote(mli, "val gl_unsigned_short : int")
quote(mli, "val gl_int : int")
quote(mli, "val gl_unsigned_int : int")
quote(mli, "val gl_float : int")
quote(mli, "val gl_double : int")
quote(mli, "val gl_2_bytes : int")
quote(mli, "val gl_3_bytes : int")
quote(mli, "val gl_4_bytes : int")
quote(mli, "val gl_points : int")
quote(mli, "val gl_lines : int")
quote(mli, "val gl_line_loop : int")
quote(mli, "val gl_line_strip : int")
quote(mli, "val gl_triangles : int")
quote(mli, "val gl_triangle_strip : int")
quote(mli, "val gl_triangle_fan : int")
quote(mli, "val gl_quads : int")
quote(mli, "val gl_quad_strip : int")
quote(mli, "val gl_polygon : int")
quote(mli, "val gl_vertex_array : int")
quote(mli, "val gl_normal_array : int")
quote(mli, "val gl_color_array : int")
quote(mli, "val gl_index_array : int")
quote(mli, "val gl_texture_coord_array : int")
quote(mli, "val gl_edge_flag_array : int")
quote(mli, "val gl_vertex_array_size : int")
quote(mli, "val gl_vertex_array_type : int")
quote(mli, "val gl_vertex_array_stride : int")
quote(mli, "val gl_normal_array_type : int")
quote(mli, "val gl_normal_array_stride : int")
quote(mli, "val gl_color_array_size : int")
quote(mli, "val gl_color_array_type : int")
quote(mli, "val gl_color_array_stride : int")
quote(mli, "val gl_index_array_type : int")
quote(mli, "val gl_index_array_stride : int")
quote(mli, "val gl_texture_coord_array_size : int")
quote(mli, "val gl_texture_coord_array_type : int")
quote(mli, "val gl_texture_coord_array_stride : int")
quote(mli, "val gl_edge_flag_array_stride : int")
quote(mli, "val gl_vertex_array_pointer : int")
quote(mli, "val gl_normal_array_pointer : int")
quote(mli, "val gl_color_array_pointer : int")
quote(mli, "val gl_index_array_pointer : int")
quote(mli, "val gl_texture_coord_array_pointer : int")
quote(mli, "val gl_edge_flag_array_pointer : int")
quote(mli, "val gl_v2f : int")
quote(mli, "val gl_v3f : int")
quote(mli, "val gl_c4ub_v2f : int")
quote(mli, "val gl_c4ub_v3f : int")
quote(mli, "val gl_c3f_v3f : int")
quote(mli, "val gl_n3f_v3f : int")
quote(mli, "val gl_c4f_n3f_v3f : int")
quote(mli, "val gl_t2f_v3f : int")
quote(mli, "val gl_t4f_v4f : int")
quote(mli, "val gl_t2f_c4ub_v3f : int")
quote(mli, "val gl_t2f_c3f_v3f : int")
quote(mli, "val gl_t2f_n3f_v3f : int")
quote(mli, "val gl_t2f_c4f_n3f_v3f : int")
quote(mli, "val gl_t4f_c4f_n3f_v4f : int")
quote(mli, "val gl_matrix_mode : int")
quote(mli, "val gl_modelview : int")
quote(mli, "val gl_projection : int")
quote(mli, "val gl_texture : int")
quote(mli, "val gl_point_smooth : int")
quote(mli, "val gl_point_size : int")
quote(mli, "val gl_point_size_granularity : int")
quote(mli, "val gl_point_size_range : int")
quote(mli, "val gl_line_smooth : int")
quote(mli, "val gl_line_stipple : int")
quote(mli, "val gl_line_stipple_pattern : int")
quote(mli, "val gl_line_stipple_repeat : int")
quote(mli, "val gl_line_width : int")
quote(mli, "val gl_line_width_granularity : int")
quote(mli, "val gl_line_width_range : int")
quote(mli, "val gl_point : int")
quote(mli, "val gl_line : int")
quote(mli, "val gl_fill : int")
quote(mli, "val gl_cw : int")
quote(mli, "val gl_ccw : int")
quote(mli, "val gl_front : int")
quote(mli, "val gl_back : int")
quote(mli, "val gl_polygon_mode : int")
quote(mli, "val gl_polygon_smooth : int")
quote(mli, "val gl_polygon_stipple : int")
quote(mli, "val gl_edge_flag : int")
quote(mli, "val gl_cull_face : int")
quote(mli, "val gl_cull_face_mode : int")
quote(mli, "val gl_front_face : int")
quote(mli, "val gl_polygon_offset_factor : int")
quote(mli, "val gl_polygon_offset_units : int")
quote(mli, "val gl_polygon_offset_point : int")
quote(mli, "val gl_polygon_offset_line : int")
quote(mli, "val gl_polygon_offset_fill : int")
quote(mli, "val gl_compile : int")
quote(mli, "val gl_compile_and_execute : int")
quote(mli, "val gl_list_base : int")
quote(mli, "val gl_list_index : int")
quote(mli, "val gl_list_mode : int")
quote(mli, "val gl_never : int")
quote(mli, "val gl_less : int")
quote(mli, "val gl_equal : int")
quote(mli, "val gl_lequal : int")
quote(mli, "val gl_greater : int")
quote(mli, "val gl_notequal : int")
quote(mli, "val gl_gequal : int")
quote(mli, "val gl_always : int")
quote(mli, "val gl_depth_test : int")
quote(mli, "val gl_depth_bits : int")
quote(mli, "val gl_depth_clear_value : int")
quote(mli, "val gl_depth_func : int")
quote(mli, "val gl_depth_range : int")
quote(mli, "val gl_depth_writemask : int")
quote(mli, "val gl_depth_component : int")
quote(mli, "val gl_lighting : int")
quote(mli, "val gl_light0 : int")
quote(mli, "val gl_light1 : int")
quote(mli, "val gl_light2 : int")
quote(mli, "val gl_light3 : int")
quote(mli, "val gl_light4 : int")
quote(mli, "val gl_light5 : int")
quote(mli, "val gl_light6 : int")
quote(mli, "val gl_light7 : int")
quote(mli, "val gl_spot_exponent : int")
quote(mli, "val gl_spot_cutoff : int")
quote(mli, "val gl_constant_attenuation : int")
quote(mli, "val gl_linear_attenuation : int")
quote(mli, "val gl_quadratic_attenuation : int")
quote(mli, "val gl_ambient : int")
quote(mli, "val gl_diffuse : int")
quote(mli, "val gl_specular : int")
quote(mli, "val gl_shininess : int")
quote(mli, "val gl_emission : int")
quote(mli, "val gl_position : int")
quote(mli, "val gl_spot_direction : int")
quote(mli, "val gl_ambient_and_diffuse : int")
quote(mli, "val gl_color_indexes : int")
quote(mli, "val gl_light_model_two_side : int")
quote(mli, "val gl_light_model_local_viewer : int")
quote(mli, "val gl_light_model_ambient : int")
quote(mli, "val gl_front_and_back : int")
quote(mli, "val gl_shade_model : int")
quote(mli, "val gl_flat : int")
quote(mli, "val gl_smooth : int")
quote(mli, "val gl_color_material : int")
quote(mli, "val gl_color_material_face : int")
quote(mli, "val gl_color_material_parameter : int")
quote(mli, "val gl_normalize : int")
quote(mli, "val gl_clip_plane0 : int")
quote(mli, "val gl_clip_plane1 : int")
quote(mli, "val gl_clip_plane2 : int")
quote(mli, "val gl_clip_plane3 : int")
quote(mli, "val gl_clip_plane4 : int")
quote(mli, "val gl_clip_plane5 : int")
quote(mli, "val gl_accum_red_bits : int")
quote(mli, "val gl_accum_green_bits : int")
quote(mli, "val gl_accum_blue_bits : int")
quote(mli, "val gl_accum_alpha_bits : int")
quote(mli, "val gl_accum_clear_value : int")
quote(mli, "val gl_accum : int")
quote(mli, "val gl_add : int")
quote(mli, "val gl_load : int")
quote(mli, "val gl_mult : int")
quote(mli, "val gl_return : int")
quote(mli, "val gl_alpha_test : int")
quote(mli, "val gl_alpha_test_ref : int")
quote(mli, "val gl_alpha_test_func : int")
quote(mli, "val gl_blend : int")
quote(mli, "val gl_blend_src : int")
quote(mli, "val gl_blend_dst : int")
quote(mli, "val gl_zero : int")
quote(mli, "val gl_one : int")
quote(mli, "val gl_src_color : int")
quote(mli, "val gl_one_minus_src_color : int")
quote(mli, "val gl_dst_color : int")
quote(mli, "val gl_one_minus_dst_color : int")
quote(mli, "val gl_src_alpha : int")
quote(mli, "val gl_one_minus_src_alpha : int")
quote(mli, "val gl_dst_alpha : int")
quote(mli, "val gl_one_minus_dst_alpha : int")
quote(mli, "val gl_src_alpha_saturate : int")
quote(mli, "val gl_constant_color : int")
quote(mli, "val gl_one_minus_constant_color : int")
quote(mli, "val gl_constant_alpha : int")
quote(mli, "val gl_one_minus_constant_alpha : int")
quote(mli, "val gl_feedback : int")
quote(mli, "val gl_render : int")
quote(mli, "val gl_select : int")
quote(mli, "val gl_2d : int")
quote(mli, "val gl_3d : int")
quote(mli, "val gl_3d_color : int")
quote(mli, "val gl_3d_color_texture : int")
quote(mli, "val gl_4d_color_texture : int")
quote(mli, "val gl_point_token : int")
quote(mli, "val gl_line_token : int")
quote(mli, "val gl_line_reset_token : int")
quote(mli, "val gl_polygon_token : int")
quote(mli, "val gl_bitmap_token : int")
quote(mli, "val gl_draw_pixel_token : int")
quote(mli, "val gl_copy_pixel_token : int")
quote(mli, "val gl_pass_through_token : int")
quote(mli, "val gl_feedback_buffer_pointer : int")
quote(mli, "val gl_feedback_buffer_size : int")
quote(mli, "val gl_feedback_buffer_type : int")
quote(mli, "val gl_selection_buffer_pointer : int")
quote(mli, "val gl_selection_buffer_size : int")
quote(mli, "val gl_fog : int")
quote(mli, "val gl_fog_mode : int")
quote(mli, "val gl_fog_density : int")
quote(mli, "val gl_fog_color : int")
quote(mli, "val gl_fog_index : int")
quote(mli, "val gl_fog_start : int")
quote(mli, "val gl_fog_end : int")
quote(mli, "val gl_linear : int")
quote(mli, "val gl_exp : int")
quote(mli, "val gl_exp2 : int")
quote(mli, "val gl_logic_op : int")
quote(mli, "val gl_index_logic_op : int")
quote(mli, "val gl_color_logic_op : int")
quote(mli, "val gl_logic_op_mode : int")
quote(mli, "val gl_clear : int")
quote(mli, "val gl_set : int")
quote(mli, "val gl_copy : int")
quote(mli, "val gl_copy_inverted : int")
quote(mli, "val gl_noop : int")
quote(mli, "val gl_invert : int")
quote(mli, "val gl_and : int")
quote(mli, "val gl_nand : int")
quote(mli, "val gl_or : int")
quote(mli, "val gl_nor : int")
quote(mli, "val gl_xor : int")
quote(mli, "val gl_equiv : int")
quote(mli, "val gl_and_reverse : int")
quote(mli, "val gl_and_inverted : int")
quote(mli, "val gl_or_reverse : int")
quote(mli, "val gl_or_inverted : int")
quote(mli, "val gl_stencil_test : int")
quote(mli, "val gl_stencil_writemask : int")
quote(mli, "val gl_stencil_bits : int")
quote(mli, "val gl_stencil_func : int")
quote(mli, "val gl_stencil_value_mask : int")
quote(mli, "val gl_stencil_ref : int")
quote(mli, "val gl_stencil_fail : int")
quote(mli, "val gl_stencil_pass_depth_pass : int")
quote(mli, "val gl_stencil_pass_depth_fail : int")
quote(mli, "val gl_stencil_clear_value : int")
quote(mli, "val gl_stencil_index : int")
quote(mli, "val gl_keep : int")
quote(mli, "val gl_replace : int")
quote(mli, "val gl_incr : int")
quote(mli, "val gl_decr : int")
quote(mli, "val gl_none : int")
quote(mli, "val gl_left : int")
quote(mli, "val gl_right : int")
quote(mli, "val gl_front_left : int")
quote(mli, "val gl_front_right : int")
quote(mli, "val gl_back_left : int")
quote(mli, "val gl_back_right : int")
quote(mli, "val gl_aux0 : int")
quote(mli, "val gl_aux1 : int")
quote(mli, "val gl_aux2 : int")
quote(mli, "val gl_aux3 : int")
quote(mli, "val gl_color_index : int")
quote(mli, "val gl_red : int")
quote(mli, "val gl_green : int")
quote(mli, "val gl_blue : int")
quote(mli, "val gl_alpha : int")
quote(mli, "val gl_luminance : int")
quote(mli, "val gl_luminance_alpha : int")
quote(mli, "val gl_alpha_bits : int")
quote(mli, "val gl_red_bits : int")
quote(mli, "val gl_green_bits : int")
quote(mli, "val gl_blue_bits : int")
quote(mli, "val gl_index_bits : int")
quote(mli, "val gl_subpixel_bits : int")
quote(mli, "val gl_aux_buffers : int")
quote(mli, "val gl_read_buffer : int")
quote(mli, "val gl_draw_buffer : int")
quote(mli, "val gl_doublebuffer : int")
quote(mli, "val gl_stereo : int")
quote(mli, "val gl_bitmap : int")
quote(mli, "val gl_color : int")
quote(mli, "val gl_depth : int")
quote(mli, "val gl_stencil : int")
quote(mli, "val gl_dither : int")
quote(mli, "val gl_rgb : int")
quote(mli, "val gl_rgba : int")
quote(mli, "val gl_max_list_nesting : int")
quote(mli, "val gl_max_attrib_stack_depth : int")
quote(mli, "val gl_max_modelview_stack_depth : int")
quote(mli, "val gl_max_name_stack_depth : int")
quote(mli, "val gl_max_projection_stack_depth : int")
quote(mli, "val gl_max_texture_stack_depth : int")
quote(mli, "val gl_max_eval_order : int")
quote(mli, "val gl_max_lights : int")
quote(mli, "val gl_max_clip_planes : int")
quote(mli, "val gl_max_texture_size : int")
quote(mli, "val gl_max_pixel_map_table : int")
quote(mli, "val gl_max_viewport_dims : int")
quote(mli, "val gl_max_client_attrib_stack_depth : int")
quote(mli, "val gl_attrib_stack_depth : int")
quote(mli, "val gl_client_attrib_stack_depth : int")
quote(mli, "val gl_color_clear_value : int")
quote(mli, "val gl_color_writemask : int")
quote(mli, "val gl_current_index : int")
quote(mli, "val gl_current_color : int")
quote(mli, "val gl_current_normal : int")
quote(mli, "val gl_current_raster_color : int")
quote(mli, "val gl_current_raster_distance : int")
quote(mli, "val gl_current_raster_index : int")
quote(mli, "val gl_current_raster_position : int")
quote(mli, "val gl_current_raster_texture_coords : int")
quote(mli, "val gl_current_raster_position_valid : int")
quote(mli, "val gl_current_texture_coords : int")
quote(mli, "val gl_index_clear_value : int")
quote(mli, "val gl_index_mode : int")
quote(mli, "val gl_index_writemask : int")
quote(mli, "val gl_modelview_matrix : int")
quote(mli, "val gl_modelview_stack_depth : int")
quote(mli, "val gl_name_stack_depth : int")
quote(mli, "val gl_projection_matrix : int")
quote(mli, "val gl_projection_stack_depth : int")
quote(mli, "val gl_render_mode : int")
quote(mli, "val gl_rgba_mode : int")
quote(mli, "val gl_texture_matrix : int")
quote(mli, "val gl_texture_stack_depth : int")
quote(mli, "val gl_viewport : int")
quote(mli, "val gl_auto_normal : int")
quote(mli, "val gl_map1_color_4 : int")
quote(mli, "val gl_map1_grid_domain : int")
quote(mli, "val gl_map1_grid_segments : int")
quote(mli, "val gl_map1_index : int")
quote(mli, "val gl_map1_normal : int")
quote(mli, "val gl_map1_texture_coord_1 : int")
quote(mli, "val gl_map1_texture_coord_2 : int")
quote(mli, "val gl_map1_texture_coord_3 : int")
quote(mli, "val gl_map1_texture_coord_4 : int")
quote(mli, "val gl_map1_vertex_3 : int")
quote(mli, "val gl_map1_vertex_4 : int")
quote(mli, "val gl_map2_color_4 : int")
quote(mli, "val gl_map2_grid_domain : int")
quote(mli, "val gl_map2_grid_segments : int")
quote(mli, "val gl_map2_index : int")
quote(mli, "val gl_map2_normal : int")
quote(mli, "val gl_map2_texture_coord_1 : int")
quote(mli, "val gl_map2_texture_coord_2 : int")
quote(mli, "val gl_map2_texture_coord_3 : int")
quote(mli, "val gl_map2_texture_coord_4 : int")
quote(mli, "val gl_map2_vertex_3 : int")
quote(mli, "val gl_map2_vertex_4 : int")
quote(mli, "val gl_coeff : int")
quote(mli, "val gl_domain : int")
quote(mli, "val gl_order : int")
quote(mli, "val gl_fog_hint : int")
quote(mli, "val gl_line_smooth_hint : int")
quote(mli, "val gl_perspective_correction_hint : int")
quote(mli, "val gl_point_smooth_hint : int")
quote(mli, "val gl_polygon_smooth_hint : int")
quote(mli, "val gl_dont_care : int")
quote(mli, "val gl_fastest : int")
quote(mli, "val gl_nicest : int")
quote(mli, "val gl_scissor_test : int")
quote(mli, "val gl_scissor_box : int")
quote(mli, "val gl_map_color : int")
quote(mli, "val gl_map_stencil : int")
quote(mli, "val gl_index_shift : int")
quote(mli, "val gl_index_offset : int")
quote(mli, "val gl_red_scale : int")
quote(mli, "val gl_red_bias : int")
quote(mli, "val gl_green_scale : int")
quote(mli, "val gl_green_bias : int")
quote(mli, "val gl_blue_scale : int")
quote(mli, "val gl_blue_bias : int")
quote(mli, "val gl_alpha_scale : int")
quote(mli, "val gl_alpha_bias : int")
quote(mli, "val gl_depth_scale : int")
quote(mli, "val gl_depth_bias : int")
quote(mli, "val gl_pixel_map_s_to_s_size : int")
quote(mli, "val gl_pixel_map_i_to_i_size : int")
quote(mli, "val gl_pixel_map_i_to_r_size : int")
quote(mli, "val gl_pixel_map_i_to_g_size : int")
quote(mli, "val gl_pixel_map_i_to_b_size : int")
quote(mli, "val gl_pixel_map_i_to_a_size : int")
quote(mli, "val gl_pixel_map_r_to_r_size : int")
quote(mli, "val gl_pixel_map_g_to_g_size : int")
quote(mli, "val gl_pixel_map_b_to_b_size : int")
quote(mli, "val gl_pixel_map_a_to_a_size : int")
quote(mli, "val gl_pixel_map_s_to_s : int")
quote(mli, "val gl_pixel_map_i_to_i : int")
quote(mli, "val gl_pixel_map_i_to_r : int")
quote(mli, "val gl_pixel_map_i_to_g : int")
quote(mli, "val gl_pixel_map_i_to_b : int")
quote(mli, "val gl_pixel_map_i_to_a : int")
quote(mli, "val gl_pixel_map_r_to_r : int")
quote(mli, "val gl_pixel_map_g_to_g : int")
quote(mli, "val gl_pixel_map_b_to_b : int")
quote(mli, "val gl_pixel_map_a_to_a : int")
quote(mli, "val gl_pack_alignment : int")
quote(mli, "val gl_pack_lsb_first : int")
quote(mli, "val gl_pack_row_length : int")
quote(mli, "val gl_pack_skip_pixels : int")
quote(mli, "val gl_pack_skip_rows : int")
quote(mli, "val gl_pack_swap_bytes : int")
quote(mli, "val gl_unpack_alignment : int")
quote(mli, "val gl_unpack_lsb_first : int")
quote(mli, "val gl_unpack_row_length : int")
quote(mli, "val gl_unpack_skip_pixels : int")
quote(mli, "val gl_unpack_skip_rows : int")
quote(mli, "val gl_unpack_swap_bytes : int")
quote(mli, "val gl_zoom_x : int")
quote(mli, "val gl_zoom_y : int")
quote(mli, "val gl_texture_env : int")
quote(mli, "val gl_texture_env_mode : int")
quote(mli, "val gl_texture_1d : int")
quote(mli, "val gl_texture_2d : int")
quote(mli, "val gl_texture_wrap_s : int")
quote(mli, "val gl_texture_wrap_t : int")
quote(mli, "val gl_texture_mag_filter : int")
quote(mli, "val gl_texture_min_filter : int")
quote(mli, "val gl_texture_env_color : int")
quote(mli, "val gl_texture_gen_s : int")
quote(mli, "val gl_texture_gen_t : int")
quote(mli, "val gl_texture_gen_mode : int")
quote(mli, "val gl_texture_border_color : int")
quote(mli, "val gl_texture_width : int")
quote(mli, "val gl_texture_height : int")
quote(mli, "val gl_texture_border : int")
quote(mli, "val gl_texture_components : int")
quote(mli, "val gl_texture_red_size : int")
quote(mli, "val gl_texture_green_size : int")
quote(mli, "val gl_texture_blue_size : int")
quote(mli, "val gl_texture_alpha_size : int")
quote(mli, "val gl_texture_luminance_size : int")
quote(mli, "val gl_texture_intensity_size : int")
quote(mli, "val gl_nearest_mipmap_nearest : int")
quote(mli, "val gl_nearest_mipmap_linear : int")
quote(mli, "val gl_linear_mipmap_nearest : int")
quote(mli, "val gl_linear_mipmap_linear : int")
quote(mli, "val gl_object_linear : int")
quote(mli, "val gl_object_plane : int")
quote(mli, "val gl_eye_linear : int")
quote(mli, "val gl_eye_plane : int")
quote(mli, "val gl_sphere_map : int")
quote(mli, "val gl_decal : int")
quote(mli, "val gl_modulate : int")
quote(mli, "val gl_nearest : int")
quote(mli, "val gl_repeat : int")
quote(mli, "val gl_clamp : int")
quote(mli, "val gl_s : int")
quote(mli, "val gl_t : int")
quote(mli, "val gl_r : int")
quote(mli, "val gl_q : int")
quote(mli, "val gl_texture_gen_r : int")
quote(mli, "val gl_texture_gen_q : int")
quote(mli, "val gl_proxy_texture_1d : int")
quote(mli, "val gl_proxy_texture_2d : int")
quote(mli, "val gl_texture_priority : int")
quote(mli, "val gl_texture_resident : int")
quote(mli, "val gl_texture_binding_1d : int")
quote(mli, "val gl_texture_binding_2d : int")
quote(mli, "val gl_texture_internal_format : int")
quote(mli, "val gl_pack_skip_images : int")
quote(mli, "val gl_pack_image_height : int")
quote(mli, "val gl_unpack_skip_images : int")
quote(mli, "val gl_unpack_image_height : int")
quote(mli, "val gl_texture_3d : int")
quote(mli, "val gl_proxy_texture_3d : int")
quote(mli, "val gl_texture_depth : int")
quote(mli, "val gl_texture_wrap_r : int")
quote(mli, "val gl_max_3d_texture_size : int")
quote(mli, "val gl_texture_binding_3d : int")
quote(mli, "val gl_alpha4 : int")
quote(mli, "val gl_alpha8 : int")
quote(mli, "val gl_alpha12 : int")
quote(mli, "val gl_alpha16 : int")
quote(mli, "val gl_luminance4 : int")
quote(mli, "val gl_luminance8 : int")
quote(mli, "val gl_luminance12 : int")
quote(mli, "val gl_luminance16 : int")
quote(mli, "val gl_luminance4_alpha4 : int")
quote(mli, "val gl_luminance6_alpha2 : int")
quote(mli, "val gl_luminance8_alpha8 : int")
quote(mli, "val gl_luminance12_alpha4 : int")
quote(mli, "val gl_luminance12_alpha12 : int")
quote(mli, "val gl_luminance16_alpha16 : int")
quote(mli, "val gl_intensity : int")
quote(mli, "val gl_intensity4 : int")
quote(mli, "val gl_intensity8 : int")
quote(mli, "val gl_intensity12 : int")
quote(mli, "val gl_intensity16 : int")
quote(mli, "val gl_r3_g3_b2 : int")
quote(mli, "val gl_rgb4 : int")
quote(mli, "val gl_rgb5 : int")
quote(mli, "val gl_rgb8 : int")
quote(mli, "val gl_rgb10 : int")
quote(mli, "val gl_rgb12 : int")
quote(mli, "val gl_rgb16 : int")
quote(mli, "val gl_rgba2 : int")
quote(mli, "val gl_rgba4 : int")
quote(mli, "val gl_rgb5_a1 : int")
quote(mli, "val gl_rgba8 : int")
quote(mli, "val gl_rgb10_a2 : int")
quote(mli, "val gl_rgba12 : int")
quote(mli, "val gl_rgba16 : int")
quote(mli, "val gl_vendor : int")
quote(mli, "val gl_renderer : int")
quote(mli, "val gl_version : int")
quote(mli, "val gl_extensions : int")
quote(mli, "val gl_no_error : int")
quote(mli, "val gl_invalid_value : int")
quote(mli, "val gl_invalid_enum : int")
quote(mli, "val gl_invalid_operation : int")
quote(mli, "val gl_stack_overflow : int")
quote(mli, "val gl_stack_underflow : int")
quote(mli, "val gl_out_of_memory : int")
quote(mli, "val gl_rescale_normal : int")
quote(mli, "val gl_clamp_to_edge : int")
quote(mli, "val gl_max_elements_vertices : int")
quote(mli, "val gl_max_elements_indices : int")
quote(mli, "val gl_bgr : int")
quote(mli, "val gl_bgra : int")
quote(mli, "val gl_unsigned_byte_3_3_2 : int")
quote(mli, "val gl_unsigned_byte_2_3_3_rev : int")
quote(mli, "val gl_unsigned_short_5_6_5 : int")
quote(mli, "val gl_unsigned_short_5_6_5_rev : int")
quote(mli, "val gl_unsigned_short_4_4_4_4 : int")
quote(mli, "val gl_unsigned_short_4_4_4_4_rev : int")
quote(mli, "val gl_unsigned_short_5_5_5_1 : int")
quote(mli, "val gl_unsigned_short_1_5_5_5_rev : int")
quote(mli, "val gl_unsigned_int_8_8_8_8 : int")
quote(mli, "val gl_unsigned_int_8_8_8_8_rev : int")
quote(mli, "val gl_unsigned_int_10_10_10_2 : int")
quote(mli, "val gl_unsigned_int_2_10_10_10_rev : int")
quote(mli, "val gl_light_model_color_control : int")
quote(mli, "val gl_single_color : int")
quote(mli, "val gl_separate_specular_color : int")
quote(mli, "val gl_texture_min_lod : int")
quote(mli, "val gl_texture_max_lod : int")
quote(mli, "val gl_texture_base_level : int")
quote(mli, "val gl_texture_max_level : int")
quote(mli, "val gl_smooth_point_size_range : int")
quote(mli, "val gl_smooth_point_size_granularity : int")
quote(mli, "val gl_smooth_line_width_range : int")
quote(mli, "val gl_smooth_line_width_granularity : int")
quote(mli, "val gl_aliased_point_size_range : int")
quote(mli, "val gl_aliased_line_width_range : int")
quote(mli, "val gl_color_table : int")
quote(mli, "val gl_post_convolution_color_table : int")
quote(mli, "val gl_post_color_matrix_color_table : int")
quote(mli, "val gl_proxy_color_table : int")
quote(mli, "val gl_proxy_post_convolution_color_table : int")
quote(mli, "val gl_proxy_post_color_matrix_color_table : int")
quote(mli, "val gl_color_table_scale : int")
quote(mli, "val gl_color_table_bias : int")
quote(mli, "val gl_color_table_format : int")
quote(mli, "val gl_color_table_width : int")
quote(mli, "val gl_color_table_red_size : int")
quote(mli, "val gl_color_table_green_size : int")
quote(mli, "val gl_color_table_blue_size : int")
quote(mli, "val gl_color_table_alpha_size : int")
quote(mli, "val gl_color_table_luminance_size : int")
quote(mli, "val gl_color_table_intensity_size : int")
quote(mli, "val gl_convolution_1d : int")
quote(mli, "val gl_convolution_2d : int")
quote(mli, "val gl_separable_2d : int")
quote(mli, "val gl_convolution_border_mode : int")
quote(mli, "val gl_convolution_filter_scale : int")
quote(mli, "val gl_convolution_filter_bias : int")
quote(mli, "val gl_reduce : int")
quote(mli, "val gl_convolution_format : int")
quote(mli, "val gl_convolution_width : int")
quote(mli, "val gl_convolution_height : int")
quote(mli, "val gl_max_convolution_width : int")
quote(mli, "val gl_max_convolution_height : int")
quote(mli, "val gl_post_convolution_red_scale : int")
quote(mli, "val gl_post_convolution_green_scale : int")
quote(mli, "val gl_post_convolution_blue_scale : int")
quote(mli, "val gl_post_convolution_alpha_scale : int")
quote(mli, "val gl_post_convolution_red_bias : int")
quote(mli, "val gl_post_convolution_green_bias : int")
quote(mli, "val gl_post_convolution_blue_bias : int")
quote(mli, "val gl_post_convolution_alpha_bias : int")
quote(mli, "val gl_constant_border : int")
quote(mli, "val gl_replicate_border : int")
quote(mli, "val gl_convolution_border_color : int")
quote(mli, "val gl_color_matrix : int")
quote(mli, "val gl_color_matrix_stack_depth : int")
quote(mli, "val gl_max_color_matrix_stack_depth : int")
quote(mli, "val gl_post_color_matrix_red_scale : int")
quote(mli, "val gl_post_color_matrix_green_scale : int")
quote(mli, "val gl_post_color_matrix_blue_scale : int")
quote(mli, "val gl_post_color_matrix_alpha_scale : int")
quote(mli, "val gl_post_color_matrix_red_bias : int")
quote(mli, "val gl_post_color_matrix_green_bias : int")
quote(mli, "val gl_post_color_matrix_blue_bias : int")
quote(mli, "val gl_post_color_matrix_alpha_bias : int")
quote(mli, "val gl_histogram : int")
quote(mli, "val gl_proxy_histogram : int")
quote(mli, "val gl_histogram_width : int")
quote(mli, "val gl_histogram_format : int")
quote(mli, "val gl_histogram_red_size : int")
quote(mli, "val gl_histogram_green_size : int")
quote(mli, "val gl_histogram_blue_size : int")
quote(mli, "val gl_histogram_alpha_size : int")
quote(mli, "val gl_histogram_luminance_size : int")
quote(mli, "val gl_histogram_sink : int")
quote(mli, "val gl_minmax : int")
quote(mli, "val gl_minmax_format : int")
quote(mli, "val gl_minmax_sink : int")
quote(mli, "val gl_table_too_large : int")
quote(mli, "val gl_blend_equation : int")
quote(mli, "val gl_min : int")
quote(mli, "val gl_max : int")
quote(mli, "val gl_func_add : int")
quote(mli, "val gl_func_subtract : int")
quote(mli, "val gl_func_reverse_subtract : int")
quote(mli, "val gl_blend_color : int")
quote(mli, "val gl_current_bit : int")
quote(mli, "val gl_point_bit : int")
quote(mli, "val gl_line_bit : int")
quote(mli, "val gl_polygon_bit : int")
quote(mli, "val gl_polygon_stipple_bit : int")
quote(mli, "val gl_pixel_mode_bit : int")
quote(mli, "val gl_lighting_bit : int")
quote(mli, "val gl_fog_bit : int")
quote(mli, "val gl_depth_buffer_bit : int")
quote(mli, "val gl_accum_buffer_bit : int")
quote(mli, "val gl_stencil_buffer_bit : int")
quote(mli, "val gl_viewport_bit : int")
quote(mli, "val gl_transform_bit : int")
quote(mli, "val gl_enable_bit : int")
quote(mli, "val gl_color_buffer_bit : int")
quote(mli, "val gl_hint_bit : int")
quote(mli, "val gl_eval_bit : int")
quote(mli, "val gl_list_bit : int")
quote(mli, "val gl_texture_bit : int")
quote(mli, "val gl_scissor_bit : int")
quote(mli, "val gl_all_attrib_bits : int")
quote(mli, "val gl_client_pixel_store_bit : int")
quote(mli, "val gl_client_vertex_array_bit : int")
quote(mli, "val gl_all_client_attrib_bits : int")
quote(mli, "val gl_arb_multitexture : int")
quote(mli, "val gl_texture0_arb : int")
quote(mli, "val gl_texture1_arb : int")
quote(mli, "val gl_texture2_arb : int")
quote(mli, "val gl_texture3_arb : int")
quote(mli, "val gl_texture4_arb : int")
quote(mli, "val gl_texture5_arb : int")
quote(mli, "val gl_texture6_arb : int")
quote(mli, "val gl_texture7_arb : int")
quote(mli, "val gl_texture8_arb : int")
quote(mli, "val gl_texture9_arb : int")
quote(mli, "val gl_texture10_arb : int")
quote(mli, "val gl_texture11_arb : int")
quote(mli, "val gl_texture12_arb : int")
quote(mli, "val gl_texture13_arb : int")
quote(mli, "val gl_texture14_arb : int")
quote(mli, "val gl_texture15_arb : int")
quote(mli, "val gl_texture16_arb : int")
quote(mli, "val gl_texture17_arb : int")
quote(mli, "val gl_texture18_arb : int")
quote(mli, "val gl_texture19_arb : int")
quote(mli, "val gl_texture20_arb : int")
quote(mli, "val gl_texture21_arb : int")
quote(mli, "val gl_texture22_arb : int")
quote(mli, "val gl_texture23_arb : int")
quote(mli, "val gl_texture24_arb : int")
quote(mli, "val gl_texture25_arb : int")
quote(mli, "val gl_texture26_arb : int")
quote(mli, "val gl_texture27_arb : int")
quote(mli, "val gl_texture28_arb : int")
quote(mli, "val gl_texture29_arb : int")
quote(mli, "val gl_texture30_arb : int")
quote(mli, "val gl_texture31_arb : int")
quote(mli, "val gl_active_texture_arb : int")
quote(mli, "val gl_client_active_texture_arb : int")
quote(mli, "val gl_max_texture_units_arb : int")
quote(mli, "val gl_ext_abgr : int")
quote(mli, "val gl_abgr_ext : int")
quote(mli, "val gl_ext_blend_color : int")
quote(mli, "val gl_constant_color_ext : int")
quote(mli, "val gl_one_minus_constant_color_ext : int")
quote(mli, "val gl_constant_alpha_ext : int")
quote(mli, "val gl_one_minus_constant_alpha_ext : int")
quote(mli, "val gl_blend_color_ext : int")
quote(mli, "val gl_ext_polygon_offset : int")
quote(mli, "val gl_polygon_offset_ext : int")
quote(mli, "val gl_polygon_offset_factor_ext : int")
quote(mli, "val gl_polygon_offset_bias_ext : int")
quote(mli, "val gl_ext_texture3d : int")
quote(mli, "val gl_pack_skip_images_ext : int")
quote(mli, "val gl_pack_image_height_ext : int")
quote(mli, "val gl_unpack_skip_images_ext : int")
quote(mli, "val gl_unpack_image_height_ext : int")
quote(mli, "val gl_texture_3d_ext : int")
quote(mli, "val gl_proxy_texture_3d_ext : int")
quote(mli, "val gl_texture_depth_ext : int")
quote(mli, "val gl_texture_wrap_r_ext : int")
quote(mli, "val gl_max_3d_texture_size_ext : int")
quote(mli, "val gl_texture_3d_binding_ext : int")
quote(mli, "val gl_ext_texture_object : int")
quote(mli, "val gl_texture_priority_ext : int")
quote(mli, "val gl_texture_resident_ext : int")
quote(mli, "val gl_texture_1d_binding_ext : int")
quote(mli, "val gl_texture_2d_binding_ext : int")
quote(mli, "val gl_ext_rescale_normal : int")
quote(mli, "val gl_rescale_normal_ext : int")
quote(mli, "val gl_ext_vertex_array : int")
quote(mli, "val gl_vertex_array_ext : int")
quote(mli, "val gl_normal_array_ext : int")
quote(mli, "val gl_color_array_ext : int")
quote(mli, "val gl_index_array_ext : int")
quote(mli, "val gl_texture_coord_array_ext : int")
quote(mli, "val gl_edge_flag_array_ext : int")
quote(mli, "val gl_vertex_array_size_ext : int")
quote(mli, "val gl_vertex_array_type_ext : int")
quote(mli, "val gl_vertex_array_stride_ext : int")
quote(mli, "val gl_vertex_array_count_ext : int")
quote(mli, "val gl_normal_array_type_ext : int")
quote(mli, "val gl_normal_array_stride_ext : int")
quote(mli, "val gl_normal_array_count_ext : int")
quote(mli, "val gl_color_array_size_ext : int")
quote(mli, "val gl_color_array_type_ext : int")
quote(mli, "val gl_color_array_stride_ext : int")
quote(mli, "val gl_color_array_count_ext : int")
quote(mli, "val gl_index_array_type_ext : int")
quote(mli, "val gl_index_array_stride_ext : int")
quote(mli, "val gl_index_array_count_ext : int")
quote(mli, "val gl_texture_coord_array_size_ext : int")
quote(mli, "val gl_texture_coord_array_type_ext : int")
quote(mli, "val gl_texture_coord_array_stride_ext : int")
quote(mli, "val gl_texture_coord_array_count_ext : int")
quote(mli, "val gl_edge_flag_array_stride_ext : int")
quote(mli, "val gl_edge_flag_array_count_ext : int")
quote(mli, "val gl_vertex_array_pointer_ext : int")
quote(mli, "val gl_normal_array_pointer_ext : int")
quote(mli, "val gl_color_array_pointer_ext : int")
quote(mli, "val gl_index_array_pointer_ext : int")
quote(mli, "val gl_texture_coord_array_pointer_ext : int")
quote(mli, "val gl_edge_flag_array_pointer_ext : int")
quote(mli, "val gl_sgis_texture_edge_clamp : int")
quote(mli, "val gl_clamp_to_edge_sgis : int")
quote(mli, "val gl_ext_blend_minmax : int")
quote(mli, "val gl_func_add_ext : int")
quote(mli, "val gl_min_ext : int")
quote(mli, "val gl_max_ext : int")
quote(mli, "val gl_blend_equation_ext : int")
quote(mli, "val gl_ext_blend_subtract : int")
quote(mli, "val gl_func_subtract_ext : int")
quote(mli, "val gl_func_reverse_subtract_ext : int")
quote(mli, "val gl_ext_blend_logic_op : int")
quote(mli, "val gl_ext_point_parameters : int")
quote(mli, "val gl_point_size_min_ext : int")
quote(mli, "val gl_point_size_max_ext : int")
quote(mli, "val gl_point_fade_threshold_size_ext : int")
quote(mli, "val gl_distance_attenuation_ext : int")
quote(mli, "val gl_ext_paletted_texture : int")
quote(mli, "val gl_table_too_large_ext : int")
quote(mli, "val gl_color_table_format_ext : int")
quote(mli, "val gl_color_table_width_ext : int")
quote(mli, "val gl_color_table_red_size_ext : int")
quote(mli, "val gl_color_table_green_size_ext : int")
quote(mli, "val gl_color_table_blue_size_ext : int")
quote(mli, "val gl_color_table_alpha_size_ext : int")
quote(mli, "val gl_color_table_luminance_size_ext : int")
quote(mli, "val gl_color_table_intensity_size_ext : int")
quote(mli, "val gl_texture_index_size_ext : int")
quote(mli, "val gl_color_index1_ext : int")
quote(mli, "val gl_color_index2_ext : int")
quote(mli, "val gl_color_index4_ext : int")
quote(mli, "val gl_color_index8_ext : int")
quote(mli, "val gl_color_index12_ext : int")
quote(mli, "val gl_color_index16_ext : int")
quote(mli, "val gl_ext_clip_volume_hint : int")
quote(mli, "val gl_clip_volume_clipping_hint_ext : int")
quote(mli, "val gl_ext_compiled_vertex_array : int")
quote(mli, "val gl_array_element_lock_first_ext : int")
quote(mli, "val gl_array_element_lock_count_ext : int")
quote(mli, "val gl_hp_occlusion_test : int")
quote(mli, "val gl_occlusion_test_hp : int")
quote(mli, "val gl_occlusion_test_result_hp : int")
quote(mli, "val gl_ext_shared_texture_palette : int")
quote(mli, "val gl_shared_texture_palette_ext : int")
quote(mli, "val gl_ext_stencil_wrap : int")
quote(mli, "val gl_incr_wrap_ext : int")
quote(mli, "val gl_decr_wrap_ext : int")
quote(mli, "val gl_nv_texgen_reflection : int")
quote(mli, "val gl_normal_map_nv : int")
quote(mli, "val gl_reflection_map_nv : int")
quote(mli, "val gl_ext_texture_env_add : int")
quote(mli, "val gl_mesa_window_pos : int")
quote(mli, "val gl_mesa_resize_buffers : int")
quote(mli, "val gl_ext_texture_env_dot3 : int")
quote(mli, "val gl_dot3_rgb_ext : int")
quote(mli, "val gl_dot3_rgba_ext : int")
quote(ml, "let gl_version_1_1 = 1;;")
quote(ml, "let gl_version_1_2 = 1;;")
quote(ml, "let gl_false = 0x0;;")
quote(ml, "let gl_true = 0x1;;")
quote(ml, "let gl_byte = 0x1400;;")
quote(ml, "let gl_unsigned_byte = 0x1401;;")
quote(ml, "let gl_short = 0x1402;;")
quote(ml, "let gl_unsigned_short = 0x1403;;")
quote(ml, "let gl_int = 0x1404;;")
quote(ml, "let gl_unsigned_int = 0x1405;;")
quote(ml, "let gl_float = 0x1406;;")
quote(ml, "let gl_double = 0x140a;;")
quote(ml, "let gl_2_bytes = 0x1407;;")
quote(ml, "let gl_3_bytes = 0x1408;;")
quote(ml, "let gl_4_bytes = 0x1409;;")
quote(ml, "let gl_points = 0x0000;;")
quote(ml, "let gl_lines = 0x0001;;")
quote(ml, "let gl_line_loop = 0x0002;;")
quote(ml, "let gl_line_strip = 0x0003;;")
quote(ml, "let gl_triangles = 0x0004;;")
quote(ml, "let gl_triangle_strip = 0x0005;;")
quote(ml, "let gl_triangle_fan = 0x0006;;")
quote(ml, "let gl_quads = 0x0007;;")
quote(ml, "let gl_quad_strip = 0x0008;;")
quote(ml, "let gl_polygon = 0x0009;;")
quote(ml, "let gl_vertex_array = 0x8074;;")
quote(ml, "let gl_normal_array = 0x8075;;")
quote(ml, "let gl_color_array = 0x8076;;")
quote(ml, "let gl_index_array = 0x8077;;")
quote(ml, "let gl_texture_coord_array = 0x8078;;")
quote(ml, "let gl_edge_flag_array = 0x8079;;")
quote(ml, "let gl_vertex_array_size = 0x807a;;")
quote(ml, "let gl_vertex_array_type = 0x807b;;")
quote(ml, "let gl_vertex_array_stride = 0x807c;;")
quote(ml, "let gl_normal_array_type = 0x807e;;")
quote(ml, "let gl_normal_array_stride = 0x807f;;")
quote(ml, "let gl_color_array_size = 0x8081;;")
quote(ml, "let gl_color_array_type = 0x8082;;")
quote(ml, "let gl_color_array_stride = 0x8083;;")
quote(ml, "let gl_index_array_type = 0x8085;;")
quote(ml, "let gl_index_array_stride = 0x8086;;")
quote(ml, "let gl_texture_coord_array_size = 0x8088;;")
quote(ml, "let gl_texture_coord_array_type = 0x8089;;")
quote(ml, "let gl_texture_coord_array_stride = 0x808a;;")
quote(ml, "let gl_edge_flag_array_stride = 0x808c;;")
quote(ml, "let gl_vertex_array_pointer = 0x808e;;")
quote(ml, "let gl_normal_array_pointer = 0x808f;;")
quote(ml, "let gl_color_array_pointer = 0x8090;;")
quote(ml, "let gl_index_array_pointer = 0x8091;;")
quote(ml, "let gl_texture_coord_array_pointer = 0x8092;;")
quote(ml, "let gl_edge_flag_array_pointer = 0x8093;;")
quote(ml, "let gl_v2f = 0x2a20;;")
quote(ml, "let gl_v3f = 0x2a21;;")
quote(ml, "let gl_c4ub_v2f = 0x2a22;;")
quote(ml, "let gl_c4ub_v3f = 0x2a23;;")
quote(ml, "let gl_c3f_v3f = 0x2a24;;")
quote(ml, "let gl_n3f_v3f = 0x2a25;;")
quote(ml, "let gl_c4f_n3f_v3f = 0x2a26;;")
quote(ml, "let gl_t2f_v3f = 0x2a27;;")
quote(ml, "let gl_t4f_v4f = 0x2a28;;")
quote(ml, "let gl_t2f_c4ub_v3f = 0x2a29;;")
quote(ml, "let gl_t2f_c3f_v3f = 0x2a2a;;")
quote(ml, "let gl_t2f_n3f_v3f = 0x2a2b;;")
quote(ml, "let gl_t2f_c4f_n3f_v3f = 0x2a2c;;")
quote(ml, "let gl_t4f_c4f_n3f_v4f = 0x2a2d;;")
quote(ml, "let gl_matrix_mode = 0x0ba0;;")
quote(ml, "let gl_modelview = 0x1700;;")
quote(ml, "let gl_projection = 0x1701;;")
quote(ml, "let gl_texture = 0x1702;;")
quote(ml, "let gl_point_smooth = 0x0b10;;")
quote(ml, "let gl_point_size = 0x0b11;;")
quote(ml, "let gl_point_size_granularity = 0x0b13;;")
quote(ml, "let gl_point_size_range = 0x0b12;;")
quote(ml, "let gl_line_smooth = 0x0b20;;")
quote(ml, "let gl_line_stipple = 0x0b24;;")
quote(ml, "let gl_line_stipple_pattern = 0x0b25;;")
quote(ml, "let gl_line_stipple_repeat = 0x0b26;;")
quote(ml, "let gl_line_width = 0x0b21;;")
quote(ml, "let gl_line_width_granularity = 0x0b23;;")
quote(ml, "let gl_line_width_range = 0x0b22;;")
quote(ml, "let gl_point = 0x1b00;;")
quote(ml, "let gl_line = 0x1b01;;")
quote(ml, "let gl_fill = 0x1b02;;")
quote(ml, "let gl_cw = 0x0900;;")
quote(ml, "let gl_ccw = 0x0901;;")
quote(ml, "let gl_front = 0x0404;;")
quote(ml, "let gl_back = 0x0405;;")
quote(ml, "let gl_polygon_mode = 0x0b40;;")
quote(ml, "let gl_polygon_smooth = 0x0b41;;")
quote(ml, "let gl_polygon_stipple = 0x0b42;;")
quote(ml, "let gl_edge_flag = 0x0b43;;")
quote(ml, "let gl_cull_face = 0x0b44;;")
quote(ml, "let gl_cull_face_mode = 0x0b45;;")
quote(ml, "let gl_front_face = 0x0b46;;")
quote(ml, "let gl_polygon_offset_factor = 0x8038;;")
quote(ml, "let gl_polygon_offset_units = 0x2a00;;")
quote(ml, "let gl_polygon_offset_point = 0x2a01;;")
quote(ml, "let gl_polygon_offset_line = 0x2a02;;")
quote(ml, "let gl_polygon_offset_fill = 0x8037;;")
quote(ml, "let gl_compile = 0x1300;;")
quote(ml, "let gl_compile_and_execute = 0x1301;;")
quote(ml, "let gl_list_base = 0x0b32;;")
quote(ml, "let gl_list_index = 0x0b33;;")
quote(ml, "let gl_list_mode = 0x0b30;;")
quote(ml, "let gl_never = 0x0200;;")
quote(ml, "let gl_less = 0x0201;;")
quote(ml, "let gl_equal = 0x0202;;")
quote(ml, "let gl_lequal = 0x0203;;")
quote(ml, "let gl_greater = 0x0204;;")
quote(ml, "let gl_notequal = 0x0205;;")
quote(ml, "let gl_gequal = 0x0206;;")
quote(ml, "let gl_always = 0x0207;;")
quote(ml, "let gl_depth_test = 0x0b71;;")
quote(ml, "let gl_depth_bits = 0x0d56;;")
quote(ml, "let gl_depth_clear_value = 0x0b73;;")
quote(ml, "let gl_depth_func = 0x0b74;;")
quote(ml, "let gl_depth_range = 0x0b70;;")
quote(ml, "let gl_depth_writemask = 0x0b72;;")
quote(ml, "let gl_depth_component = 0x1902;;")
quote(ml, "let gl_lighting = 0x0b50;;")
quote(ml, "let gl_light0 = 0x4000;;")
quote(ml, "let gl_light1 = 0x4001;;")
quote(ml, "let gl_light2 = 0x4002;;")
quote(ml, "let gl_light3 = 0x4003;;")
quote(ml, "let gl_light4 = 0x4004;;")
quote(ml, "let gl_light5 = 0x4005;;")
quote(ml, "let gl_light6 = 0x4006;;")
quote(ml, "let gl_light7 = 0x4007;;")
quote(ml, "let gl_spot_exponent = 0x1205;;")
quote(ml, "let gl_spot_cutoff = 0x1206;;")
quote(ml, "let gl_constant_attenuation = 0x1207;;")
quote(ml, "let gl_linear_attenuation = 0x1208;;")
quote(ml, "let gl_quadratic_attenuation = 0x1209;;")
quote(ml, "let gl_ambient = 0x1200;;")
quote(ml, "let gl_diffuse = 0x1201;;")
quote(ml, "let gl_specular = 0x1202;;")
quote(ml, "let gl_shininess = 0x1601;;")
quote(ml, "let gl_emission = 0x1600;;")
quote(ml, "let gl_position = 0x1203;;")
quote(ml, "let gl_spot_direction = 0x1204;;")
quote(ml, "let gl_ambient_and_diffuse = 0x1602;;")
quote(ml, "let gl_color_indexes = 0x1603;;")
quote(ml, "let gl_light_model_two_side = 0x0b52;;")
quote(ml, "let gl_light_model_local_viewer = 0x0b51;;")
quote(ml, "let gl_light_model_ambient = 0x0b53;;")
quote(ml, "let gl_front_and_back = 0x0408;;")
quote(ml, "let gl_shade_model = 0x0b54;;")
quote(ml, "let gl_flat = 0x1d00;;")
quote(ml, "let gl_smooth = 0x1d01;;")
quote(ml, "let gl_color_material = 0x0b57;;")
quote(ml, "let gl_color_material_face = 0x0b55;;")
quote(ml, "let gl_color_material_parameter = 0x0b56;;")
quote(ml, "let gl_normalize = 0x0ba1;;")
quote(ml, "let gl_clip_plane0 = 0x3000;;")
quote(ml, "let gl_clip_plane1 = 0x3001;;")
quote(ml, "let gl_clip_plane2 = 0x3002;;")
quote(ml, "let gl_clip_plane3 = 0x3003;;")
quote(ml, "let gl_clip_plane4 = 0x3004;;")
quote(ml, "let gl_clip_plane5 = 0x3005;;")
quote(ml, "let gl_accum_red_bits = 0x0d58;;")
quote(ml, "let gl_accum_green_bits = 0x0d59;;")
quote(ml, "let gl_accum_blue_bits = 0x0d5a;;")
quote(ml, "let gl_accum_alpha_bits = 0x0d5b;;")
quote(ml, "let gl_accum_clear_value = 0x0b80;;")
quote(ml, "let gl_accum = 0x0100;;")
quote(ml, "let gl_add = 0x0104;;")
quote(ml, "let gl_load = 0x0101;;")
quote(ml, "let gl_mult = 0x0103;;")
quote(ml, "let gl_return = 0x0102;;")
quote(ml, "let gl_alpha_test = 0x0bc0;;")
quote(ml, "let gl_alpha_test_ref = 0x0bc2;;")
quote(ml, "let gl_alpha_test_func = 0x0bc1;;")
quote(ml, "let gl_blend = 0x0be2;;")
quote(ml, "let gl_blend_src = 0x0be1;;")
quote(ml, "let gl_blend_dst = 0x0be0;;")
quote(ml, "let gl_zero = 0x0;;")
quote(ml, "let gl_one = 0x1;;")
quote(ml, "let gl_src_color = 0x0300;;")
quote(ml, "let gl_one_minus_src_color = 0x0301;;")
quote(ml, "let gl_dst_color = 0x0306;;")
quote(ml, "let gl_one_minus_dst_color = 0x0307;;")
quote(ml, "let gl_src_alpha = 0x0302;;")
quote(ml, "let gl_one_minus_src_alpha = 0x0303;;")
quote(ml, "let gl_dst_alpha = 0x0304;;")
quote(ml, "let gl_one_minus_dst_alpha = 0x0305;;")
quote(ml, "let gl_src_alpha_saturate = 0x0308;;")
quote(ml, "let gl_constant_color = 0x8001;;")
quote(ml, "let gl_one_minus_constant_color = 0x8002;;")
quote(ml, "let gl_constant_alpha = 0x8003;;")
quote(ml, "let gl_one_minus_constant_alpha = 0x8004;;")
quote(ml, "let gl_feedback = 0x1c01;;")
quote(ml, "let gl_render = 0x1c00;;")
quote(ml, "let gl_select = 0x1c02;;")
quote(ml, "let gl_2d = 0x0600;;")
quote(ml, "let gl_3d = 0x0601;;")
quote(ml, "let gl_3d_color = 0x0602;;")
quote(ml, "let gl_3d_color_texture = 0x0603;;")
quote(ml, "let gl_4d_color_texture = 0x0604;;")
quote(ml, "let gl_point_token = 0x0701;;")
quote(ml, "let gl_line_token = 0x0702;;")
quote(ml, "let gl_line_reset_token = 0x0707;;")
quote(ml, "let gl_polygon_token = 0x0703;;")
quote(ml, "let gl_bitmap_token = 0x0704;;")
quote(ml, "let gl_draw_pixel_token = 0x0705;;")
quote(ml, "let gl_copy_pixel_token = 0x0706;;")
quote(ml, "let gl_pass_through_token = 0x0700;;")
quote(ml, "let gl_feedback_buffer_pointer = 0x0df0;;")
quote(ml, "let gl_feedback_buffer_size = 0x0df1;;")
quote(ml, "let gl_feedback_buffer_type = 0x0df2;;")
quote(ml, "let gl_selection_buffer_pointer = 0x0df3;;")
quote(ml, "let gl_selection_buffer_size = 0x0df4;;")
quote(ml, "let gl_fog = 0x0b60;;")
quote(ml, "let gl_fog_mode = 0x0b65;;")
quote(ml, "let gl_fog_density = 0x0b62;;")
quote(ml, "let gl_fog_color = 0x0b66;;")
quote(ml, "let gl_fog_index = 0x0b61;;")
quote(ml, "let gl_fog_start = 0x0b63;;")
quote(ml, "let gl_fog_end = 0x0b64;;")
quote(ml, "let gl_linear = 0x2601;;")
quote(ml, "let gl_exp = 0x0800;;")
quote(ml, "let gl_exp2 = 0x0801;;")
quote(ml, "let gl_logic_op = 0x0bf1;;")
quote(ml, "let gl_index_logic_op = 0x0bf1;;")
quote(ml, "let gl_color_logic_op = 0x0bf2;;")
quote(ml, "let gl_logic_op_mode = 0x0bf0;;")
quote(ml, "let gl_clear = 0x1500;;")
quote(ml, "let gl_set = 0x150f;;")
quote(ml, "let gl_copy = 0x1503;;")
quote(ml, "let gl_copy_inverted = 0x150c;;")
quote(ml, "let gl_noop = 0x1505;;")
quote(ml, "let gl_invert = 0x150a;;")
quote(ml, "let gl_and = 0x1501;;")
quote(ml, "let gl_nand = 0x150e;;")
quote(ml, "let gl_or = 0x1507;;")
quote(ml, "let gl_nor = 0x1508;;")
quote(ml, "let gl_xor = 0x1506;;")
quote(ml, "let gl_equiv = 0x1509;;")
quote(ml, "let gl_and_reverse = 0x1502;;")
quote(ml, "let gl_and_inverted = 0x1504;;")
quote(ml, "let gl_or_reverse = 0x150b;;")
quote(ml, "let gl_or_inverted = 0x150d;;")
quote(ml, "let gl_stencil_test = 0x0b90;;")
quote(ml, "let gl_stencil_writemask = 0x0b98;;")
quote(ml, "let gl_stencil_bits = 0x0d57;;")
quote(ml, "let gl_stencil_func = 0x0b92;;")
quote(ml, "let gl_stencil_value_mask = 0x0b93;;")
quote(ml, "let gl_stencil_ref = 0x0b97;;")
quote(ml, "let gl_stencil_fail = 0x0b94;;")
quote(ml, "let gl_stencil_pass_depth_pass = 0x0b96;;")
quote(ml, "let gl_stencil_pass_depth_fail = 0x0b95;;")
quote(ml, "let gl_stencil_clear_value = 0x0b91;;")
quote(ml, "let gl_stencil_index = 0x1901;;")
quote(ml, "let gl_keep = 0x1e00;;")
quote(ml, "let gl_replace = 0x1e01;;")
quote(ml, "let gl_incr = 0x1e02;;")
quote(ml, "let gl_decr = 0x1e03;;")
quote(ml, "let gl_none = 0x0;;")
quote(ml, "let gl_left = 0x0406;;")
quote(ml, "let gl_right = 0x0407;;")
quote(ml, "let gl_front_left = 0x0400;;")
quote(ml, "let gl_front_right = 0x0401;;")
quote(ml, "let gl_back_left = 0x0402;;")
quote(ml, "let gl_back_right = 0x0403;;")
quote(ml, "let gl_aux0 = 0x0409;;")
quote(ml, "let gl_aux1 = 0x040a;;")
quote(ml, "let gl_aux2 = 0x040b;;")
quote(ml, "let gl_aux3 = 0x040c;;")
quote(ml, "let gl_color_index = 0x1900;;")
quote(ml, "let gl_red = 0x1903;;")
quote(ml, "let gl_green = 0x1904;;")
quote(ml, "let gl_blue = 0x1905;;")
quote(ml, "let gl_alpha = 0x1906;;")
quote(ml, "let gl_luminance = 0x1909;;")
quote(ml, "let gl_luminance_alpha = 0x190a;;")
quote(ml, "let gl_alpha_bits = 0x0d55;;")
quote(ml, "let gl_red_bits = 0x0d52;;")
quote(ml, "let gl_green_bits = 0x0d53;;")
quote(ml, "let gl_blue_bits = 0x0d54;;")
quote(ml, "let gl_index_bits = 0x0d51;;")
quote(ml, "let gl_subpixel_bits = 0x0d50;;")
quote(ml, "let gl_aux_buffers = 0x0c00;;")
quote(ml, "let gl_read_buffer = 0x0c02;;")
quote(ml, "let gl_draw_buffer = 0x0c01;;")
quote(ml, "let gl_doublebuffer = 0x0c32;;")
quote(ml, "let gl_stereo = 0x0c33;;")
quote(ml, "let gl_bitmap = 0x1a00;;")
quote(ml, "let gl_color = 0x1800;;")
quote(ml, "let gl_depth = 0x1801;;")
quote(ml, "let gl_stencil = 0x1802;;")
quote(ml, "let gl_dither = 0x0bd0;;")
quote(ml, "let gl_rgb = 0x1907;;")
quote(ml, "let gl_rgba = 0x1908;;")
quote(ml, "let gl_max_list_nesting = 0x0b31;;")
quote(ml, "let gl_max_attrib_stack_depth = 0x0d35;;")
quote(ml, "let gl_max_modelview_stack_depth = 0x0d36;;")
quote(ml, "let gl_max_name_stack_depth = 0x0d37;;")
quote(ml, "let gl_max_projection_stack_depth = 0x0d38;;")
quote(ml, "let gl_max_texture_stack_depth = 0x0d39;;")
quote(ml, "let gl_max_eval_order = 0x0d30;;")
quote(ml, "let gl_max_lights = 0x0d31;;")
quote(ml, "let gl_max_clip_planes = 0x0d32;;")
quote(ml, "let gl_max_texture_size = 0x0d33;;")
quote(ml, "let gl_max_pixel_map_table = 0x0d34;;")
quote(ml, "let gl_max_viewport_dims = 0x0d3a;;")
quote(ml, "let gl_max_client_attrib_stack_depth = 0x0d3b;;")
quote(ml, "let gl_attrib_stack_depth = 0x0bb0;;")
quote(ml, "let gl_client_attrib_stack_depth = 0x0bb1;;")
quote(ml, "let gl_color_clear_value = 0x0c22;;")
quote(ml, "let gl_color_writemask = 0x0c23;;")
quote(ml, "let gl_current_index = 0x0b01;;")
quote(ml, "let gl_current_color = 0x0b00;;")
quote(ml, "let gl_current_normal = 0x0b02;;")
quote(ml, "let gl_current_raster_color = 0x0b04;;")
quote(ml, "let gl_current_raster_distance = 0x0b09;;")
quote(ml, "let gl_current_raster_index = 0x0b05;;")
quote(ml, "let gl_current_raster_position = 0x0b07;;")
quote(ml, "let gl_current_raster_texture_coords = 0x0b06;;")
quote(ml, "let gl_current_raster_position_valid = 0x0b08;;")
quote(ml, "let gl_current_texture_coords = 0x0b03;;")
quote(ml, "let gl_index_clear_value = 0x0c20;;")
quote(ml, "let gl_index_mode = 0x0c30;;")
quote(ml, "let gl_index_writemask = 0x0c21;;")
quote(ml, "let gl_modelview_matrix = 0x0ba6;;")
quote(ml, "let gl_modelview_stack_depth = 0x0ba3;;")
quote(ml, "let gl_name_stack_depth = 0x0d70;;")
quote(ml, "let gl_projection_matrix = 0x0ba7;;")
quote(ml, "let gl_projection_stack_depth = 0x0ba4;;")
quote(ml, "let gl_render_mode = 0x0c40;;")
quote(ml, "let gl_rgba_mode = 0x0c31;;")
quote(ml, "let gl_texture_matrix = 0x0ba8;;")
quote(ml, "let gl_texture_stack_depth = 0x0ba5;;")
quote(ml, "let gl_viewport = 0x0ba2;;")
quote(ml, "let gl_auto_normal = 0x0d80;;")
quote(ml, "let gl_map1_color_4 = 0x0d90;;")
quote(ml, "let gl_map1_grid_domain = 0x0dd0;;")
quote(ml, "let gl_map1_grid_segments = 0x0dd1;;")
quote(ml, "let gl_map1_index = 0x0d91;;")
quote(ml, "let gl_map1_normal = 0x0d92;;")
quote(ml, "let gl_map1_texture_coord_1 = 0x0d93;;")
quote(ml, "let gl_map1_texture_coord_2 = 0x0d94;;")
quote(ml, "let gl_map1_texture_coord_3 = 0x0d95;;")
quote(ml, "let gl_map1_texture_coord_4 = 0x0d96;;")
quote(ml, "let gl_map1_vertex_3 = 0x0d97;;")
quote(ml, "let gl_map1_vertex_4 = 0x0d98;;")
quote(ml, "let gl_map2_color_4 = 0x0db0;;")
quote(ml, "let gl_map2_grid_domain = 0x0dd2;;")
quote(ml, "let gl_map2_grid_segments = 0x0dd3;;")
quote(ml, "let gl_map2_index = 0x0db1;;")
quote(ml, "let gl_map2_normal = 0x0db2;;")
quote(ml, "let gl_map2_texture_coord_1 = 0x0db3;;")
quote(ml, "let gl_map2_texture_coord_2 = 0x0db4;;")
quote(ml, "let gl_map2_texture_coord_3 = 0x0db5;;")
quote(ml, "let gl_map2_texture_coord_4 = 0x0db6;;")
quote(ml, "let gl_map2_vertex_3 = 0x0db7;;")
quote(ml, "let gl_map2_vertex_4 = 0x0db8;;")
quote(ml, "let gl_coeff = 0x0a00;;")
quote(ml, "let gl_domain = 0x0a02;;")
quote(ml, "let gl_order = 0x0a01;;")
quote(ml, "let gl_fog_hint = 0x0c54;;")
quote(ml, "let gl_line_smooth_hint = 0x0c52;;")
quote(ml, "let gl_perspective_correction_hint = 0x0c50;;")
quote(ml, "let gl_point_smooth_hint = 0x0c51;;")
quote(ml, "let gl_polygon_smooth_hint = 0x0c53;;")
quote(ml, "let gl_dont_care = 0x1100;;")
quote(ml, "let gl_fastest = 0x1101;;")
quote(ml, "let gl_nicest = 0x1102;;")
quote(ml, "let gl_scissor_test = 0x0c11;;")
quote(ml, "let gl_scissor_box = 0x0c10;;")
quote(ml, "let gl_map_color = 0x0d10;;")
quote(ml, "let gl_map_stencil = 0x0d11;;")
quote(ml, "let gl_index_shift = 0x0d12;;")
quote(ml, "let gl_index_offset = 0x0d13;;")
quote(ml, "let gl_red_scale = 0x0d14;;")
quote(ml, "let gl_red_bias = 0x0d15;;")
quote(ml, "let gl_green_scale = 0x0d18;;")
quote(ml, "let gl_green_bias = 0x0d19;;")
quote(ml, "let gl_blue_scale = 0x0d1a;;")
quote(ml, "let gl_blue_bias = 0x0d1b;;")
quote(ml, "let gl_alpha_scale = 0x0d1c;;")
quote(ml, "let gl_alpha_bias = 0x0d1d;;")
quote(ml, "let gl_depth_scale = 0x0d1e;;")
quote(ml, "let gl_depth_bias = 0x0d1f;;")
quote(ml, "let gl_pixel_map_s_to_s_size = 0x0cb1;;")
quote(ml, "let gl_pixel_map_i_to_i_size = 0x0cb0;;")
quote(ml, "let gl_pixel_map_i_to_r_size = 0x0cb2;;")
quote(ml, "let gl_pixel_map_i_to_g_size = 0x0cb3;;")
quote(ml, "let gl_pixel_map_i_to_b_size = 0x0cb4;;")
quote(ml, "let gl_pixel_map_i_to_a_size = 0x0cb5;;")
quote(ml, "let gl_pixel_map_r_to_r_size = 0x0cb6;;")
quote(ml, "let gl_pixel_map_g_to_g_size = 0x0cb7;;")
quote(ml, "let gl_pixel_map_b_to_b_size = 0x0cb8;;")
quote(ml, "let gl_pixel_map_a_to_a_size = 0x0cb9;;")
quote(ml, "let gl_pixel_map_s_to_s = 0x0c71;;")
quote(ml, "let gl_pixel_map_i_to_i = 0x0c70;;")
quote(ml, "let gl_pixel_map_i_to_r = 0x0c72;;")
quote(ml, "let gl_pixel_map_i_to_g = 0x0c73;;")
quote(ml, "let gl_pixel_map_i_to_b = 0x0c74;;")
quote(ml, "let gl_pixel_map_i_to_a = 0x0c75;;")
quote(ml, "let gl_pixel_map_r_to_r = 0x0c76;;")
quote(ml, "let gl_pixel_map_g_to_g = 0x0c77;;")
quote(ml, "let gl_pixel_map_b_to_b = 0x0c78;;")
quote(ml, "let gl_pixel_map_a_to_a = 0x0c79;;")
quote(ml, "let gl_pack_alignment = 0x0d05;;")
quote(ml, "let gl_pack_lsb_first = 0x0d01;;")
quote(ml, "let gl_pack_row_length = 0x0d02;;")
quote(ml, "let gl_pack_skip_pixels = 0x0d04;;")
quote(ml, "let gl_pack_skip_rows = 0x0d03;;")
quote(ml, "let gl_pack_swap_bytes = 0x0d00;;")
quote(ml, "let gl_unpack_alignment = 0x0cf5;;")
quote(ml, "let gl_unpack_lsb_first = 0x0cf1;;")
quote(ml, "let gl_unpack_row_length = 0x0cf2;;")
quote(ml, "let gl_unpack_skip_pixels = 0x0cf4;;")
quote(ml, "let gl_unpack_skip_rows = 0x0cf3;;")
quote(ml, "let gl_unpack_swap_bytes = 0x0cf0;;")
quote(ml, "let gl_zoom_x = 0x0d16;;")
quote(ml, "let gl_zoom_y = 0x0d17;;")
quote(ml, "let gl_texture_env = 0x2300;;")
quote(ml, "let gl_texture_env_mode = 0x2200;;")
quote(ml, "let gl_texture_1d = 0x0de0;;")
quote(ml, "let gl_texture_2d = 0x0de1;;")
quote(ml, "let gl_texture_wrap_s = 0x2802;;")
quote(ml, "let gl_texture_wrap_t = 0x2803;;")
quote(ml, "let gl_texture_mag_filter = 0x2800;;")
quote(ml, "let gl_texture_min_filter = 0x2801;;")
quote(ml, "let gl_texture_env_color = 0x2201;;")
quote(ml, "let gl_texture_gen_s = 0x0c60;;")
quote(ml, "let gl_texture_gen_t = 0x0c61;;")
quote(ml, "let gl_texture_gen_mode = 0x2500;;")
quote(ml, "let gl_texture_border_color = 0x1004;;")
quote(ml, "let gl_texture_width = 0x1000;;")
quote(ml, "let gl_texture_height = 0x1001;;")
quote(ml, "let gl_texture_border = 0x1005;;")
quote(ml, "let gl_texture_components = 0x1003;;")
quote(ml, "let gl_texture_red_size = 0x805c;;")
quote(ml, "let gl_texture_green_size = 0x805d;;")
quote(ml, "let gl_texture_blue_size = 0x805e;;")
quote(ml, "let gl_texture_alpha_size = 0x805f;;")
quote(ml, "let gl_texture_luminance_size = 0x8060;;")
quote(ml, "let gl_texture_intensity_size = 0x8061;;")
quote(ml, "let gl_nearest_mipmap_nearest = 0x2700;;")
quote(ml, "let gl_nearest_mipmap_linear = 0x2702;;")
quote(ml, "let gl_linear_mipmap_nearest = 0x2701;;")
quote(ml, "let gl_linear_mipmap_linear = 0x2703;;")
quote(ml, "let gl_object_linear = 0x2401;;")
quote(ml, "let gl_object_plane = 0x2501;;")
quote(ml, "let gl_eye_linear = 0x2400;;")
quote(ml, "let gl_eye_plane = 0x2502;;")
quote(ml, "let gl_sphere_map = 0x2402;;")
quote(ml, "let gl_decal = 0x2101;;")
quote(ml, "let gl_modulate = 0x2100;;")
quote(ml, "let gl_nearest = 0x2600;;")
quote(ml, "let gl_repeat = 0x2901;;")
quote(ml, "let gl_clamp = 0x2900;;")
quote(ml, "let gl_s = 0x2000;;")
quote(ml, "let gl_t = 0x2001;;")
quote(ml, "let gl_r = 0x2002;;")
quote(ml, "let gl_q = 0x2003;;")
quote(ml, "let gl_texture_gen_r = 0x0c62;;")
quote(ml, "let gl_texture_gen_q = 0x0c63;;")
quote(ml, "let gl_proxy_texture_1d = 0x8063;;")
quote(ml, "let gl_proxy_texture_2d = 0x8064;;")
quote(ml, "let gl_texture_priority = 0x8066;;")
quote(ml, "let gl_texture_resident = 0x8067;;")
quote(ml, "let gl_texture_binding_1d = 0x8068;;")
quote(ml, "let gl_texture_binding_2d = 0x8069;;")
quote(ml, "let gl_texture_internal_format = 0x1003;;")
quote(ml, "let gl_pack_skip_images = 0x806b;;")
quote(ml, "let gl_pack_image_height = 0x806c;;")
quote(ml, "let gl_unpack_skip_images = 0x806d;;")
quote(ml, "let gl_unpack_image_height = 0x806e;;")
quote(ml, "let gl_texture_3d = 0x806f;;")
quote(ml, "let gl_proxy_texture_3d = 0x8070;;")
quote(ml, "let gl_texture_depth = 0x8071;;")
quote(ml, "let gl_texture_wrap_r = 0x8072;;")
quote(ml, "let gl_max_3d_texture_size = 0x8073;;")
quote(ml, "let gl_texture_binding_3d = 0x806a;;")
quote(ml, "let gl_alpha4 = 0x803b;;")
quote(ml, "let gl_alpha8 = 0x803c;;")
quote(ml, "let gl_alpha12 = 0x803d;;")
quote(ml, "let gl_alpha16 = 0x803e;;")
quote(ml, "let gl_luminance4 = 0x803f;;")
quote(ml, "let gl_luminance8 = 0x8040;;")
quote(ml, "let gl_luminance12 = 0x8041;;")
quote(ml, "let gl_luminance16 = 0x8042;;")
quote(ml, "let gl_luminance4_alpha4 = 0x8043;;")
quote(ml, "let gl_luminance6_alpha2 = 0x8044;;")
quote(ml, "let gl_luminance8_alpha8 = 0x8045;;")
quote(ml, "let gl_luminance12_alpha4 = 0x8046;;")
quote(ml, "let gl_luminance12_alpha12 = 0x8047;;")
quote(ml, "let gl_luminance16_alpha16 = 0x8048;;")
quote(ml, "let gl_intensity = 0x8049;;")
quote(ml, "let gl_intensity4 = 0x804a;;")
quote(ml, "let gl_intensity8 = 0x804b;;")
quote(ml, "let gl_intensity12 = 0x804c;;")
quote(ml, "let gl_intensity16 = 0x804d;;")
quote(ml, "let gl_r3_g3_b2 = 0x2a10;;")
quote(ml, "let gl_rgb4 = 0x804f;;")
quote(ml, "let gl_rgb5 = 0x8050;;")
quote(ml, "let gl_rgb8 = 0x8051;;")
quote(ml, "let gl_rgb10 = 0x8052;;")
quote(ml, "let gl_rgb12 = 0x8053;;")
quote(ml, "let gl_rgb16 = 0x8054;;")
quote(ml, "let gl_rgba2 = 0x8055;;")
quote(ml, "let gl_rgba4 = 0x8056;;")
quote(ml, "let gl_rgb5_a1 = 0x8057;;")
quote(ml, "let gl_rgba8 = 0x8058;;")
quote(ml, "let gl_rgb10_a2 = 0x8059;;")
quote(ml, "let gl_rgba12 = 0x805a;;")
quote(ml, "let gl_rgba16 = 0x805b;;")
quote(ml, "let gl_vendor = 0x1f00;;")
quote(ml, "let gl_renderer = 0x1f01;;")
quote(ml, "let gl_version = 0x1f02;;")
quote(ml, "let gl_extensions = 0x1f03;;")
quote(ml, "let gl_no_error = 0x0;;")
quote(ml, "let gl_invalid_value = 0x0501;;")
quote(ml, "let gl_invalid_enum = 0x0500;;")
quote(ml, "let gl_invalid_operation = 0x0502;;")
quote(ml, "let gl_stack_overflow = 0x0503;;")
quote(ml, "let gl_stack_underflow = 0x0504;;")
quote(ml, "let gl_out_of_memory = 0x0505;;")
quote(ml, "let gl_rescale_normal = 0x803a;;")
quote(ml, "let gl_clamp_to_edge = 0x812f;;")
quote(ml, "let gl_max_elements_vertices = 0x80e8;;")
quote(ml, "let gl_max_elements_indices = 0x80e9;;")
quote(ml, "let gl_bgr = 0x80e0;;")
quote(ml, "let gl_bgra = 0x80e1;;")
quote(ml, "let gl_unsigned_byte_3_3_2 = 0x8032;;")
quote(ml, "let gl_unsigned_byte_2_3_3_rev = 0x8362;;")
quote(ml, "let gl_unsigned_short_5_6_5 = 0x8363;;")
quote(ml, "let gl_unsigned_short_5_6_5_rev = 0x8364;;")
quote(ml, "let gl_unsigned_short_4_4_4_4 = 0x8033;;")
quote(ml, "let gl_unsigned_short_4_4_4_4_rev = 0x8365;;")
quote(ml, "let gl_unsigned_short_5_5_5_1 = 0x8034;;")
quote(ml, "let gl_unsigned_short_1_5_5_5_rev = 0x8366;;")
quote(ml, "let gl_unsigned_int_8_8_8_8 = 0x8035;;")
quote(ml, "let gl_unsigned_int_8_8_8_8_rev = 0x8367;;")
quote(ml, "let gl_unsigned_int_10_10_10_2 = 0x8036;;")
quote(ml, "let gl_unsigned_int_2_10_10_10_rev = 0x8368;;")
quote(ml, "let gl_light_model_color_control = 0x81f8;;")
quote(ml, "let gl_single_color = 0x81f9;;")
quote(ml, "let gl_separate_specular_color = 0x81fa;;")
quote(ml, "let gl_texture_min_lod = 0x813a;;")
quote(ml, "let gl_texture_max_lod = 0x813b;;")
quote(ml, "let gl_texture_base_level = 0x813c;;")
quote(ml, "let gl_texture_max_level = 0x813d;;")
quote(ml, "let gl_smooth_point_size_range = 0x0b12;;")
quote(ml, "let gl_smooth_point_size_granularity = 0x0b13;;")
quote(ml, "let gl_smooth_line_width_range = 0x0b22;;")
quote(ml, "let gl_smooth_line_width_granularity = 0x0b23;;")
quote(ml, "let gl_aliased_point_size_range = 0x846d;;")
quote(ml, "let gl_aliased_line_width_range = 0x846e;;")
quote(ml, "let gl_color_table = 0x80d0;;")
quote(ml, "let gl_post_convolution_color_table = 0x80d1;;")
quote(ml, "let gl_post_color_matrix_color_table = 0x80d2;;")
quote(ml, "let gl_proxy_color_table = 0x80d3;;")
quote(ml, "let gl_proxy_post_convolution_color_table = 0x80d4;;")
quote(ml, "let gl_proxy_post_color_matrix_color_table = 0x80d5;;")
quote(ml, "let gl_color_table_scale = 0x80d6;;")
quote(ml, "let gl_color_table_bias = 0x80d7;;")
quote(ml, "let gl_color_table_format = 0x80d8;;")
quote(ml, "let gl_color_table_width = 0x80d9;;")
quote(ml, "let gl_color_table_red_size = 0x80da;;")
quote(ml, "let gl_color_table_green_size = 0x80db;;")
quote(ml, "let gl_color_table_blue_size = 0x80dc;;")
quote(ml, "let gl_color_table_alpha_size = 0x80dd;;")
quote(ml, "let gl_color_table_luminance_size = 0x80de;;")
quote(ml, "let gl_color_table_intensity_size = 0x80df;;")
quote(ml, "let gl_convolution_1d = 0x8010;;")
quote(ml, "let gl_convolution_2d = 0x8011;;")
quote(ml, "let gl_separable_2d = 0x8012;;")
quote(ml, "let gl_convolution_border_mode = 0x8013;;")
quote(ml, "let gl_convolution_filter_scale = 0x8014;;")
quote(ml, "let gl_convolution_filter_bias = 0x8015;;")
quote(ml, "let gl_reduce = 0x8016;;")
quote(ml, "let gl_convolution_format = 0x8017;;")
quote(ml, "let gl_convolution_width = 0x8018;;")
quote(ml, "let gl_convolution_height = 0x8019;;")
quote(ml, "let gl_max_convolution_width = 0x801a;;")
quote(ml, "let gl_max_convolution_height = 0x801b;;")
quote(ml, "let gl_post_convolution_red_scale = 0x801c;;")
quote(ml, "let gl_post_convolution_green_scale = 0x801d;;")
quote(ml, "let gl_post_convolution_blue_scale = 0x801e;;")
quote(ml, "let gl_post_convolution_alpha_scale = 0x801f;;")
quote(ml, "let gl_post_convolution_red_bias = 0x8020;;")
quote(ml, "let gl_post_convolution_green_bias = 0x8021;;")
quote(ml, "let gl_post_convolution_blue_bias = 0x8022;;")
quote(ml, "let gl_post_convolution_alpha_bias = 0x8023;;")
quote(ml, "let gl_constant_border = 0x8151;;")
quote(ml, "let gl_replicate_border = 0x8153;;")
quote(ml, "let gl_convolution_border_color = 0x8154;;")
quote(ml, "let gl_color_matrix = 0x80b1;;")
quote(ml, "let gl_color_matrix_stack_depth = 0x80b2;;")
quote(ml, "let gl_max_color_matrix_stack_depth = 0x80b3;;")
quote(ml, "let gl_post_color_matrix_red_scale = 0x80b4;;")
quote(ml, "let gl_post_color_matrix_green_scale = 0x80b5;;")
quote(ml, "let gl_post_color_matrix_blue_scale = 0x80b6;;")
quote(ml, "let gl_post_color_matrix_alpha_scale = 0x80b7;;")
quote(ml, "let gl_post_color_matrix_red_bias = 0x80b8;;")
quote(ml, "let gl_post_color_matrix_green_bias = 0x80b9;;")
quote(ml, "let gl_post_color_matrix_blue_bias = 0x80ba;;")
quote(ml, "let gl_post_color_matrix_alpha_bias = 0x80bb;;")
quote(ml, "let gl_histogram = 0x8024;;")
quote(ml, "let gl_proxy_histogram = 0x8025;;")
quote(ml, "let gl_histogram_width = 0x8026;;")
quote(ml, "let gl_histogram_format = 0x8027;;")
quote(ml, "let gl_histogram_red_size = 0x8028;;")
quote(ml, "let gl_histogram_green_size = 0x8029;;")
quote(ml, "let gl_histogram_blue_size = 0x802a;;")
quote(ml, "let gl_histogram_alpha_size = 0x802b;;")
quote(ml, "let gl_histogram_luminance_size = 0x802c;;")
quote(ml, "let gl_histogram_sink = 0x802d;;")
quote(ml, "let gl_minmax = 0x802e;;")
quote(ml, "let gl_minmax_format = 0x802f;;")
quote(ml, "let gl_minmax_sink = 0x8030;;")
quote(ml, "let gl_table_too_large = 0x8031;;")
quote(ml, "let gl_blend_equation = 0x8009;;")
quote(ml, "let gl_min = 0x8007;;")
quote(ml, "let gl_max = 0x8008;;")
quote(ml, "let gl_func_add = 0x8006;;")
quote(ml, "let gl_func_subtract = 0x800a;;")
quote(ml, "let gl_func_reverse_subtract = 0x800b;;")
quote(ml, "let gl_blend_color = 0x8005;;")
quote(ml, "let gl_current_bit = 0x00000001;;")
quote(ml, "let gl_point_bit = 0x00000002;;")
quote(ml, "let gl_line_bit = 0x00000004;;")
quote(ml, "let gl_polygon_bit = 0x00000008;;")
quote(ml, "let gl_polygon_stipple_bit = 0x00000010;;")
quote(ml, "let gl_pixel_mode_bit = 0x00000020;;")
quote(ml, "let gl_lighting_bit = 0x00000040;;")
quote(ml, "let gl_fog_bit = 0x00000080;;")
quote(ml, "let gl_depth_buffer_bit = 0x00000100;;")
quote(ml, "let gl_accum_buffer_bit = 0x00000200;;")
quote(ml, "let gl_stencil_buffer_bit = 0x00000400;;")
quote(ml, "let gl_viewport_bit = 0x00000800;;")
quote(ml, "let gl_transform_bit = 0x00001000;;")
quote(ml, "let gl_enable_bit = 0x00002000;;")
quote(ml, "let gl_color_buffer_bit = 0x00004000;;")
quote(ml, "let gl_hint_bit = 0x00008000;;")
quote(ml, "let gl_eval_bit = 0x00010000;;")
quote(ml, "let gl_list_bit = 0x00020000;;")
quote(ml, "let gl_texture_bit = 0x00040000;;")
quote(ml, "let gl_scissor_bit = 0x00080000;;")
quote(ml, "let gl_all_attrib_bits = 0x000fffff;;")
quote(ml, "let gl_client_pixel_store_bit = 0x00000001;;")
quote(ml, "let gl_client_vertex_array_bit = 0x00000002;;")
quote(ml, "let gl_all_client_attrib_bits = 0xffffffff;;")
quote(ml, "let gl_arb_multitexture = 1;;")
quote(ml, "let gl_texture0_arb = 0x84c0;;")
quote(ml, "let gl_texture1_arb = 0x84c1;;")
quote(ml, "let gl_texture2_arb = 0x84c2;;")
quote(ml, "let gl_texture3_arb = 0x84c3;;")
quote(ml, "let gl_texture4_arb = 0x84c4;;")
quote(ml, "let gl_texture5_arb = 0x84c5;;")
quote(ml, "let gl_texture6_arb = 0x84c6;;")
quote(ml, "let gl_texture7_arb = 0x84c7;;")
quote(ml, "let gl_texture8_arb = 0x84c8;;")
quote(ml, "let gl_texture9_arb = 0x84c9;;")
quote(ml, "let gl_texture10_arb = 0x84ca;;")
quote(ml, "let gl_texture11_arb = 0x84cb;;")
quote(ml, "let gl_texture12_arb = 0x84cc;;")
quote(ml, "let gl_texture13_arb = 0x84cd;;")
quote(ml, "let gl_texture14_arb = 0x84ce;;")
quote(ml, "let gl_texture15_arb = 0x84cf;;")
quote(ml, "let gl_texture16_arb = 0x84d0;;")
quote(ml, "let gl_texture17_arb = 0x84d1;;")
quote(ml, "let gl_texture18_arb = 0x84d2;;")
quote(ml, "let gl_texture19_arb = 0x84d3;;")
quote(ml, "let gl_texture20_arb = 0x84d4;;")
quote(ml, "let gl_texture21_arb = 0x84d5;;")
quote(ml, "let gl_texture22_arb = 0x84d6;;")
quote(ml, "let gl_texture23_arb = 0x84d7;;")
quote(ml, "let gl_texture24_arb = 0x84d8;;")
quote(ml, "let gl_texture25_arb = 0x84d9;;")
quote(ml, "let gl_texture26_arb = 0x84da;;")
quote(ml, "let gl_texture27_arb = 0x84db;;")
quote(ml, "let gl_texture28_arb = 0x84dc;;")
quote(ml, "let gl_texture29_arb = 0x84dd;;")
quote(ml, "let gl_texture30_arb = 0x84de;;")
quote(ml, "let gl_texture31_arb = 0x84df;;")
quote(ml, "let gl_active_texture_arb = 0x84e0;;")
quote(ml, "let gl_client_active_texture_arb = 0x84e1;;")
quote(ml, "let gl_max_texture_units_arb = 0x84e2;;")
quote(ml, "let gl_ext_abgr = 1;;")
quote(ml, "let gl_abgr_ext = 0x8000;;")
quote(ml, "let gl_ext_blend_color = 1;;")
quote(ml, "let gl_constant_color_ext = 0x8001;;")
quote(ml, "let gl_one_minus_constant_color_ext = 0x8002;;")
quote(ml, "let gl_constant_alpha_ext = 0x8003;;")
quote(ml, "let gl_one_minus_constant_alpha_ext = 0x8004;;")
quote(ml, "let gl_blend_color_ext = 0x8005;;")
quote(ml, "let gl_ext_polygon_offset = 1;;")
quote(ml, "let gl_polygon_offset_ext = 0x8037;;")
quote(ml, "let gl_polygon_offset_factor_ext = 0x8038;;")
quote(ml, "let gl_polygon_offset_bias_ext = 0x8039;;")
quote(ml, "let gl_ext_texture3d = 1;;")
quote(ml, "let gl_pack_skip_images_ext = 0x806b;;")
quote(ml, "let gl_pack_image_height_ext = 0x806c;;")
quote(ml, "let gl_unpack_skip_images_ext = 0x806d;;")
quote(ml, "let gl_unpack_image_height_ext = 0x806e;;")
quote(ml, "let gl_texture_3d_ext = 0x806f;;")
quote(ml, "let gl_proxy_texture_3d_ext = 0x8070;;")
quote(ml, "let gl_texture_depth_ext = 0x8071;;")
quote(ml, "let gl_texture_wrap_r_ext = 0x8072;;")
quote(ml, "let gl_max_3d_texture_size_ext = 0x8073;;")
quote(ml, "let gl_texture_3d_binding_ext = 0x806a;;")
quote(ml, "let gl_ext_texture_object = 1;;")
quote(ml, "let gl_texture_priority_ext = 0x8066;;")
quote(ml, "let gl_texture_resident_ext = 0x8067;;")
quote(ml, "let gl_texture_1d_binding_ext = 0x8068;;")
quote(ml, "let gl_texture_2d_binding_ext = 0x8069;;")
quote(ml, "let gl_ext_rescale_normal = 1;;")
quote(ml, "let gl_rescale_normal_ext = 0x803a;;")
quote(ml, "let gl_ext_vertex_array = 1;;")
quote(ml, "let gl_vertex_array_ext = 0x8074;;")
quote(ml, "let gl_normal_array_ext = 0x8075;;")
quote(ml, "let gl_color_array_ext = 0x8076;;")
quote(ml, "let gl_index_array_ext = 0x8077;;")
quote(ml, "let gl_texture_coord_array_ext = 0x8078;;")
quote(ml, "let gl_edge_flag_array_ext = 0x8079;;")
quote(ml, "let gl_vertex_array_size_ext = 0x807a;;")
quote(ml, "let gl_vertex_array_type_ext = 0x807b;;")
quote(ml, "let gl_vertex_array_stride_ext = 0x807c;;")
quote(ml, "let gl_vertex_array_count_ext = 0x807d;;")
quote(ml, "let gl_normal_array_type_ext = 0x807e;;")
quote(ml, "let gl_normal_array_stride_ext = 0x807f;;")
quote(ml, "let gl_normal_array_count_ext = 0x8080;;")
quote(ml, "let gl_color_array_size_ext = 0x8081;;")
quote(ml, "let gl_color_array_type_ext = 0x8082;;")
quote(ml, "let gl_color_array_stride_ext = 0x8083;;")
quote(ml, "let gl_color_array_count_ext = 0x8084;;")
quote(ml, "let gl_index_array_type_ext = 0x8085;;")
quote(ml, "let gl_index_array_stride_ext = 0x8086;;")
quote(ml, "let gl_index_array_count_ext = 0x8087;;")
quote(ml, "let gl_texture_coord_array_size_ext = 0x8088;;")
quote(ml, "let gl_texture_coord_array_type_ext = 0x8089;;")
quote(ml, "let gl_texture_coord_array_stride_ext = 0x808a;;")
quote(ml, "let gl_texture_coord_array_count_ext = 0x808b;;")
quote(ml, "let gl_edge_flag_array_stride_ext = 0x808c;;")
quote(ml, "let gl_edge_flag_array_count_ext = 0x808d;;")
quote(ml, "let gl_vertex_array_pointer_ext = 0x808e;;")
quote(ml, "let gl_normal_array_pointer_ext = 0x808f;;")
quote(ml, "let gl_color_array_pointer_ext = 0x8090;;")
quote(ml, "let gl_index_array_pointer_ext = 0x8091;;")
quote(ml, "let gl_texture_coord_array_pointer_ext = 0x8092;;")
quote(ml, "let gl_edge_flag_array_pointer_ext = 0x8093;;")
quote(ml, "let gl_sgis_texture_edge_clamp = 1;;")
quote(ml, "let gl_clamp_to_edge_sgis = 0x812f;;")
quote(ml, "let gl_ext_blend_minmax = 1;;")
quote(ml, "let gl_func_add_ext = 0x8006;;")
quote(ml, "let gl_min_ext = 0x8007;;")
quote(ml, "let gl_max_ext = 0x8008;;")
quote(ml, "let gl_blend_equation_ext = 0x8009;;")
quote(ml, "let gl_ext_blend_subtract = 1;;")
quote(ml, "let gl_func_subtract_ext = 0x800a;;")
quote(ml, "let gl_func_reverse_subtract_ext = 0x800b;;")
quote(ml, "let gl_ext_blend_logic_op = 1;;")
quote(ml, "let gl_ext_point_parameters = 1;;")
quote(ml, "let gl_point_size_min_ext = 0x8126;;")
quote(ml, "let gl_point_size_max_ext = 0x8127;;")
quote(ml, "let gl_point_fade_threshold_size_ext = 0x8128;;")
quote(ml, "let gl_distance_attenuation_ext = 0x8129;;")
quote(ml, "let gl_ext_paletted_texture = 1;;")
quote(ml, "let gl_table_too_large_ext = 0x8031;;")
quote(ml, "let gl_color_table_format_ext = 0x80d8;;")
quote(ml, "let gl_color_table_width_ext = 0x80d9;;")
quote(ml, "let gl_color_table_red_size_ext = 0x80da;;")
quote(ml, "let gl_color_table_green_size_ext = 0x80db;;")
quote(ml, "let gl_color_table_blue_size_ext = 0x80dc;;")
quote(ml, "let gl_color_table_alpha_size_ext = 0x80dd;;")
quote(ml, "let gl_color_table_luminance_size_ext = 0x80de;;")
quote(ml, "let gl_color_table_intensity_size_ext = 0x80df;;")
quote(ml, "let gl_texture_index_size_ext = 0x80ed;;")
quote(ml, "let gl_color_index1_ext = 0x80e2;;")
quote(ml, "let gl_color_index2_ext = 0x80e3;;")
quote(ml, "let gl_color_index4_ext = 0x80e4;;")
quote(ml, "let gl_color_index8_ext = 0x80e5;;")
quote(ml, "let gl_color_index12_ext = 0x80e6;;")
quote(ml, "let gl_color_index16_ext = 0x80e7;;")
quote(ml, "let gl_ext_clip_volume_hint = 1;;")
quote(ml, "let gl_clip_volume_clipping_hint_ext = 0x80f0;;")
quote(ml, "let gl_ext_compiled_vertex_array = 1;;")
quote(ml, "let gl_array_element_lock_first_ext = 0x81a8;;")
quote(ml, "let gl_array_element_lock_count_ext = 0x81a9;;")
quote(ml, "let gl_hp_occlusion_test = 1;;")
quote(ml, "let gl_occlusion_test_hp = 0x8165;;")
quote(ml, "let gl_occlusion_test_result_hp = 0x8166;;")
quote(ml, "let gl_ext_shared_texture_palette = 1;;")
quote(ml, "let gl_shared_texture_palette_ext = 0x81fb;;")
quote(ml, "let gl_ext_stencil_wrap = 1;;")
quote(ml, "let gl_incr_wrap_ext = 0x8507;;")
quote(ml, "let gl_decr_wrap_ext = 0x8508;;")
quote(ml, "let gl_nv_texgen_reflection = 1;;")
quote(ml, "let gl_normal_map_nv = 0x8511;;")
quote(ml, "let gl_reflection_map_nv = 0x8512;;")
quote(ml, "let gl_ext_texture_env_add = 1;;")
quote(ml, "let gl_mesa_window_pos = 1;;")
quote(ml, "let gl_mesa_resize_buffers = 1;;")
quote(ml, "let gl_ext_texture_env_dot3 = 1;;")
quote(ml, "let gl_dot3_rgb_ext = 0x8740;;")
quote(ml, "let gl_dot3_rgba_ext = 0x8741;;")
